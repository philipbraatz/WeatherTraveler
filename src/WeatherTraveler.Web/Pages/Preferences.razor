@page "/preferences"
@using Microsoft.AspNetCore.Components.Forms
@using WeatherTraveler.Web.Services
@inject IWeatherTravelerService WeatherService
@inject NavigationManager Navigation

<PageTitle>Preferences - Weather Traveler</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-md-6 mx-auto">
            <h2 class="mb-4">‚öôÔ∏è User Preferences</h2>
            
            @if (userPreferences != null)
            {
                <div class="card">
                    <div class="card-body">
                        <EditForm Model="@userPreferences" OnValidSubmit="@SavePreferences">
                            <div class="mb-3">
                                <label class="form-label">Name</label>
                                <InputText @bind-Value="userPreferences.Name" class="form-control" />
                            </div>
                            
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Min Temperature (¬∞C)</label>
                                        <InputNumber @bind-Value="userPreferences.PreferredTemperatureRange.MinTemperature" class="form-control" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Max Temperature (¬∞C)</label>
                                        <InputNumber @bind-Value="userPreferences.PreferredTemperatureRange.MaxTemperature" class="form-control" />
                                    </div>
                                </div>
                            </div>
                            
                            <div class="mb-3">
                                <div class="form-check">
                                    <InputCheckbox @bind-Value="userPreferences.AvoidRain" class="form-check-input" id="avoidRain" />
                                    <label class="form-check-label" for="avoidRain">
                                        Avoid rainy weather
                                    </label>
                                </div>
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label">Max Daily Driving Hours</label>
                                <InputNumber @bind-Value="userPreferences.MaxDailyDrivingHours" class="form-control" min="1" max="24" />
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label">Preferred Fuel Type</label>
                                <InputSelect @bind-Value="userPreferences.PreferredFuelType" class="form-select">
                                    <option value="Regular">Regular</option>
                                    <option value="Plus">Plus</option>
                                    <option value="Premium">Premium</option>
                                    <option value="Diesel">Diesel</option>
                                    <option value="Electric">Electric</option>
                                </InputSelect>
                            </div>
                            
                            <div class="mb-3">
                                <button type="submit" class="btn btn-success" disabled="@isSaving">
                                    @if (isSaving)
                                    {
                                        <span class="spinner-border spinner-border-sm me-2"></span>
                                    }
                                    üíæ Save Preferences
                                </button>
                                <button type="button" class="btn btn-secondary ms-2" @onclick="GoHome">
                                    üè† Back to Home
                                </button>
                            </div>
                        </EditForm>
                        
                        @if (!string.IsNullOrEmpty(saveMessage))
                        {
                            <div class="alert alert-success mt-3">
                                @saveMessage
                            </div>
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2">Loading preferences...</p>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private UserPreferences? userPreferences;
    private bool isSaving;
    private string saveMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            userPreferences = await WeatherService.GetUserPreferencesAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading preferences: {ex.Message}");
        }
    }

    private async Task SavePreferences()
    {
        if (userPreferences == null) return;

        isSaving = true;
        saveMessage = string.Empty;

        try
        {
            await WeatherService.UpdateUserPreferencesAsync(userPreferences);
            saveMessage = "‚úÖ Preferences saved successfully!";
            
            // Clear message after 3 seconds
            _ = Task.Delay(3000).ContinueWith(t => 
            {
                saveMessage = string.Empty;
                InvokeAsync(StateHasChanged);
            });
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error saving preferences: {ex.Message}");
            saveMessage = "‚ùå Error saving preferences. Please try again.";
        }
        finally
        {
            isSaving = false;
        }
    }

    private void GoHome()
    {
        Navigation.NavigateTo("/");
    }
}
